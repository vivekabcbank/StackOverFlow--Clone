# Generated by Django 3.2.6 on 2022-01-04 20:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("qa", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CloseQuestionVotes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "duplicate_of",
                    models.CharField(
                        blank=True, default="", max_length=1000, null=True
                    ),
                ),
                (
                    "why_closing",
                    models.CharField(
                        choices=[
                            ("DUPLICATE", "duplicate"),
                            ("OPINION_BASED", "Opinion Based"),
                            ("OFF_TOPIC", "Off Topic"),
                            ("NEEDS_DETAILS_OR_CLARITY", "Needs details or Clarity"),
                            ("NEED_MORE_FOCUS", "Need More Focus"),
                        ],
                        max_length=30,
                    ),
                ),
                ("how_many_votes_on_Close", models.IntegerField(default=0)),
                ("how_many_votes_on_Leave_open", models.IntegerField(default=0)),
                ("ended", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "question_to_closing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qa.question"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FlagComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "why_flagging",
                    models.CharField(
                        choices=[
                            ("HARRASSMENT", "Harrassment"),
                            ("UNKIND", "UnKind"),
                            ("NOT_NEEDED", "No longer Needed"),
                            ("SOMETHING_ELSE", "Something Else"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "something_else",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("how_many_votes_on_notNeeded_unkind", models.IntegerField(default=0)),
                ("how_many_votes_on_harr_else", models.IntegerField(default=0)),
                ("ended", models.BooleanField(default=False)),
                (
                    "comment_flagged_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "comment_of",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qa.commentq"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FlagPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "actions_Flag_Q",
                    models.CharField(
                        choices=[
                            ("SPAM", "Spam"),
                            ("RUDE_OR_ABUSIVE", "Rude or Abusive"),
                            ("NOT_AN_ANSWER", "Not an Answer"),
                            (
                                "IN_NEED_OF_MODERATOR_INTERVATION",
                                "In Need of Moderator Intervation",
                            ),
                            ("VERY_LOW_QUALITY", "Very Low Quality"),
                            ("NEEDS_IMPROVEMENT", "Needs Improvement"),
                            ("DUPLICATE", "Duplicate"),
                            ("OPINION_BASED", "Opinion Based"),
                            ("NEED_MORE_FOCUS", "Need More Focus# = QUESTION"),
                            ("NEED_ADDITIONAL_DETAILS", "Needs Additional Details"),
                            (
                                "A_COMMUNITY_SPECIFIC_REASON",
                                "A Community specific reason",
                            ),
                            ("ABOUT_GENERAL_COMPUTING_HAR", "About General"),
                            ("ABOUT_PROFESSIONAL", "About Professional"),
                            ("SEEKING_RECCOMENDATIONS", "Seeking Reccomendations"),
                            ("NEED_DEBUGGING", "Need Debugging Details"),
                            ("NOT_REPRODUCIBLE", "Not Reproducible"),
                            ("BLANTANLTY_OR_CLARITY", "Blantanlity or Clarity"),
                        ],
                        max_length=300,
                    ),
                ),
                ("how_many_votes_on_spamANDRude", models.IntegerField(default=0)),
                ("how_many_votes_on_notAnAnswer", models.IntegerField(default=0)),
                ("how_many_votes_on_others", models.IntegerField(default=0)),
                ("flagged_at", models.DateTimeField(auto_now_add=True)),
                ("ended", models.BooleanField(default=False)),
                (
                    "answer_forFlag",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.answer",
                    ),
                ),
                (
                    "flagged_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "question_forFlag",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LowQualityPostsCheck",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "suggested_through",
                    models.CharField(
                        choices=[("User", "User"), ("Automatic", "Automatic")],
                        max_length=30,
                    ),
                ),
                (
                    "why_low_quality",
                    models.CharField(
                        choices=[
                            ("Answer_Less_Than_200", "Answer is Less than 200 Words"),
                            (
                                "Question_Less_Than_200",
                                "Question is Less than 200 Words",
                            ),
                            ("Comment_As_Answer", "Comment as Answer"),
                        ],
                        max_length=30,
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("how_many_votes_on_OK", models.IntegerField(default=0)),
                ("how_many_votes_on_deleteIt", models.IntegerField(default=0)),
                ("how_many_votes_on_close", models.IntegerField(default=0)),
                ("at", models.DateTimeField(auto_now_add=True)),
                (
                    "low_ans_is",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.answer",
                    ),
                ),
                (
                    "low_is",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.question",
                    ),
                ),
                (
                    "suggested_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MyModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("this", models.CharField(default="", max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="QuestionEditVotes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("edited_suggested_at", models.DateTimeField(auto_now_add=True)),
                ("how_many_votes_on_approve", models.IntegerField(default=0)),
                ("how_many_votes_on_reject", models.IntegerField(default=0)),
                ("rev_Action", models.CharField(blank=True, max_length=30, null=True)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "edit_suggested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "edited_answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.answer",
                    ),
                ),
                (
                    "edited_question",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReOpenQuestionVotes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_opening", models.DateTimeField(auto_now_add=True)),
                (
                    "why_opening",
                    models.CharField(
                        choices=[
                            ("IT_IS_BETTER_NOW", "It is Better Now"),
                            ("CLOSED_BY_MISTAKE", "Closed By Mistake"),
                            ("OTHER", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "if_other",
                    models.CharField(blank=True, default="", max_length=30, null=True),
                ),
                ("how_many_votes_on_Open", models.IntegerField(default=0)),
                ("how_many_votes_on_Leave_close", models.IntegerField(default=0)),
                ("ended", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "question_to_opening",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qa.question"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewQuestionReOpenVotes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reviewActions",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("OPEN", "Open"),
                            ("LEAVE_CLOSED", "Leave Closed"),
                            ("EDIT", "EDIT"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "what_happend",
                    models.CharField(blank=True, default="", max_length=30, null=True),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "question_opened",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qa.question"
                    ),
                ),
                (
                    "reopen_reviewed_by",
                    models.ManyToManyField(
                        related_name="reopen_reviewed_by", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "review_of",
                    models.ForeignKey(
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="review.reopenquestionvotes",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewQuestionEdit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_reviewed", models.DateTimeField(auto_now_add=True)),
                (
                    "reviewActions",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Approve", "Approve"),
                            ("Improve_Edit", "Improve Edit"),
                            ("Reject_and_Edit", "Reject and Edit"),
                            ("Reject", "Reject"),
                            ("Edit", "Edit"),
                            ("Skip", "Skip"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "is_reviewed",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "answer_to_view_if",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.answer",
                    ),
                ),
                (
                    "edit_reviewed_by",
                    models.ManyToManyField(
                        related_name="edit_reviewed_by", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "question_to_view",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.question",
                    ),
                ),
                (
                    "queue_of",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="review.questioneditvotes",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewLowQualityPosts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reviewActions",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Looks_OK", "Looks Ok"),
                            ("Edit", "Edit"),
                            ("Recommend_Delete", "Recommend Delete"),
                            ("Recommend_Close", "Recommend Close"),
                            ("Skip", "Skip"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("is_reviewed", models.BooleanField(default=False)),
                ("reviewed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.answer",
                    ),
                ),
                (
                    "is_question",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.question",
                    ),
                ),
                (
                    "review_of",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="review.lowqualitypostscheck",
                    ),
                ),
                (
                    "reviewers",
                    models.ManyToManyField(
                        related_name="reviewers", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewFlagPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "flagReviewActions",
                    models.CharField(
                        choices=[
                            ("DELETE_IT", "Delete It"),
                            ("STAY_AS_IT_IS", "No Actions Needed, Stay Open"),
                            ("CLOSE_IT", "Close It"),
                            ("SKIP", "Skip"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "flag_is_reviewed",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "flag_answer_to_view_if",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.answer",
                    ),
                ),
                (
                    "flag_of",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="review.flagpost",
                    ),
                ),
                (
                    "flag_question_to_view",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.question",
                    ),
                ),
                (
                    "flag_reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewFlagComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "c_flagReviewActions",
                    models.CharField(
                        choices=[
                            ("DELETE_IT", "Delete It"),
                            ("STAY_AS_IT_IS", "No Actions Needed"),
                            ("SKIP", "Skip"),
                        ],
                        max_length=30,
                    ),
                ),
                ("c_is_reviewed", models.BooleanField(default=False)),
                (
                    "c_flag_reviewed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "flag_of",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qa.commentq"
                    ),
                ),
                (
                    "review_of",
                    models.ForeignKey(
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="review.flagcomment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewCloseVotes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reviewActions",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Close", "Close"),
                            ("Leave_open", "Leave_open"),
                            ("Edit", "Edit"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "how_Ended",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("THROUGH_CLOSE", "Through Close"),
                            ("THROUGH_LEAVE_OPEN", "Through Leave Open"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "finalResult",
                    models.CharField(blank=True, default="", max_length=30, null=True),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "question_to_closed",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qa.question",
                    ),
                ),
                (
                    "review_of",
                    models.ForeignKey(
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="review.closequestionvotes",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ManyToManyField(
                        related_name="reviewed_by", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LateAnswerReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "L_AnswerActions",
                    models.CharField(
                        choices=[
                            ("LOOKS_OK", "Looks Ok"),
                            ("EDIT", "Edit"),
                            ("RECOMMEND_DELETION", "Recommend Deletion"),
                            ("SKIPPED", "Skip"),
                        ],
                        max_length=30,
                        null=True,
                        verbose_name="Late Answers Review",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "L_AnswerReviewdBy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "L_answerReview",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qa.answer"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FirstQuestionReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "questionActions",
                    models.CharField(
                        choices=[
                            ("LOOKS_OK", "Looks Ok"),
                            ("EDIT", "Edit"),
                            ("SHARE_FEEDBACK", "Share Feedback"),
                            ("SKIPPED", "Skip"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "QuestionReviewBy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "questionReview",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qa.question"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FirstAnswerReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "actions",
                    models.CharField(
                        choices=[
                            ("LOOKS_OK", "Looks Ok"),
                            ("EDIT", "Edit"),
                            ("SHARE_FEEDBACK", "Share Feedback"),
                            ("SKIPPED", "Skip"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "AnswerReviewedBy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "answerReview",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qa.answer"
                    ),
                ),
            ],
        ),
    ]
